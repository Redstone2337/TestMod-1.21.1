plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.115'
    id 'idea'
}

version = mod_version
group = maven_group

base {
    archivesName = "${rootProject.archives_name}-neoforge"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
    withSourcesJar()
}

// 清理任务
tasks.register('cleanModDevCache', Delete) {
    delete 'build/moddev'
}

// NeoForge 配置
neoForge {
    version = rootProject.neo_version

    parchment {
        mappingsVersion = rootProject.parchment_mappings_version
        minecraftVersion = rootProject.parchment_minecraft_version
    }

    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', "${mod_id}"
            programArgument '--username=Dev'
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', "${mod_id}"
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', "${mod_id}"
        }

        // 移除数据生成配置 - 使用 Fabric 生成的数据
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

repositories {
    maven {
        name = 'NeoForge'
        url = 'https://maven.neoforged.net/releases'
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation project(":common")
}

// 源集配置 - 包含通用生成数据（由 Fabric 生成）
sourceSets.main.resources.srcDir '../common/src/generated/resources'

// 模组元数据生成
tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version: rootProject.minecraft_version,
            minecraft_version_range: rootProject.minecraft_version_range,
            neo_version: rootProject.neo_version,
            loader_version_range: rootProject.loader_version_range,
            mod_id: rootProject.mod_id,
            mod_name: rootProject.mod_name,
            mod_license: rootProject.mod_license,
            mod_version: rootProject.mod_version,
            mod_authors: rootProject.mod_authors,
            mod_description: rootProject.mod_description
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir tasks.generateModMetadata
neoForge.ideSyncTask tasks.generateModMetadata

// 编译配置
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('compileJava') {
    dependsOn(':common:compileJava')
}

// 清理任务
tasks.named('clean') {
    dependsOn 'cleanModDevCache'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = base.archivesName.get()
            from components.java
        }
    }
}

// IDE 配置
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
        generatedSourceDirs += file('../common/src/generated/resources')
    }
}

// 信息任务
tasks.register('dataGenInfo') {
    group = 'help'
    description = 'Display data generation information'

    doLast {
        println """
📊 数据生成信息:
   当前配置: 使用 Fabric 数据生成器为双平台生成数据
   数据位置: ../common/src/generated/resources
   
💡 使用方法:
   ./gradlew generateData     # 运行 Fabric 数据生成
   ./gradlew fabric:generateData  # 同上
   
📝 注意:
   NeoForge 数据生成已禁用
   所有平台共享 Fabric 生成的数据
        """
    }
}